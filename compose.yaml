version: '3'

networks:
  portfolio_network:
    driver: bridge

  eight_puzzle_network:
    driver: bridge

  shali_network:
    driver: bridge


services:

  personalsite:
    build:
      context: ./nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 443:443
    networks:
      - portfolio_network
      - eight_puzzle_network
      - shali_network

  # PORTFOLIO APP

  portfolio_fe:
    image: portfolio:1.0
    container_name: portfolio
    build:
      context: ./apps/portfolio
    ports:
      - ${PORTFOLIO_FRONTEND_PORT}:80
    networks:
      - portfolio_network

  portfolio_postgres:
    container_name: portfolio_db
    image: postgres:latest
    env_file:
      - ${PORTFOLIO_BE_PATH}/.env
    environment:
      - POSTGRES_USER=${PORTFOLIO_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PORTFOLIO_POSTGRES_PASSWORD}
      - POSTGRES_DB=${PORTFOLIO_POSTGRES_DB}
      - POSTGRES_SERVER=${PORTFOLIO_POSTGRES_SERVER}
    ports:
      - "${PORTFOLIO_POSTGRES_PORT}:5432"
    restart: always
    volumes:
       - ${PORTFOLIO_BE_PATH}/portfolio_db/postgres-data:/var/lib/postgresql/data
    networks:
      - portfolio_network

  portfolio_pgadmin:
    container_name: portfolio_pgadmin
    image: dpage/pgadmin4:latest
    # env_file:
    #   - ${PORTFOLIO_BE_PATH}/.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PORTFOLIO_PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PORTFOLIO_PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PORTFOLIO_PGADMIN_PORT}:80"
    restart: always
    networks:
      - portfolio_network

  portfolio_be:
    image: portfolio_be:1.0
    container_name: portfolio_be
    build: ${PORTFOLIO_BE_PATH}/backend
    restart: always
    depends_on:
      - portfolio_postgres
    env_file:
      - ${PORTFOLIO_BE_PATH}/.env
    ports:
      - ${PORTFOLIO_BACKEND_PORT}:7000
    volumes:
      - ${PORTFOLIO_BE_PATH}/backend/src:/portfolio/src
    networks:
      - portfolio_network

  # EIGHT-PUZZLE

  eight-puzzle:
    image: eight-puzzle:1.0
    container_name: eight-puzzle
    build:
      context: ./apps/eight_puzzle
    ports:
      - 2000:80
    networks:
      - eight_puzzle_network

  # SHALI

  shali_fe:
    image: shali_fe:1.0
    container_name: shali_fe
    build:
      context: ./apps/shali/shali_fe
    ports:
      - ${SHALI_FRONTEND_PORT}:80
    networks:
      - shali_network

  shali_postgres:
    container_name: shali_db
    image: postgres:latest
    env_file:
      - ${SHALI_BE_PATH}/.env
    environment:
    - POSTGRES_USER=${SHALI_POSTGRES_USER}
    - POSTGRES_PASSWORD=${SHALI_POSTGRES_PASSWORD}
    - POSTGRES_DB=${SHALI_POSTGRES_DB}
    - POSTGRES_SERVER=${SHALI_POSTGRES_SERVER}
    # expose:
    #   - ${SHALI_POSTGRES_PORT}
    ports:
      - "${SHALI_POSTGRES_PORT}:5432"
    restart: always
    volumes:
       - ${SHALI_BE_PATH}/shali_db/postgres-data:/var/lib/postgresql/data
    networks:
      - shali_network

  shali_pgadmin:
    container_name: shali_pgadmin
    image: dpage/pgadmin4:latest
    # env_file:
    #   - ${SHALI_BE_PATH}/.env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${SHALI_PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${SHALI_PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${SHALI_PGADMIN_PORT}:80"
    restart: always
    networks:
      - shali_network

  shali_be:
    image: shali_be:1.0
    container_name: shali_be
    build: ${SHALI_BE_PATH}/backend
    restart: always
    depends_on:
      - shali_postgres
    env_file:
      - ${SHALI_BE_PATH}/.env
    ports:
      - ${SHALI_BACKEND_PORT}:7000
    volumes:
      - ${SHALI_BE_PATH}/backend/src:/shali/src
    networks:
      - shali_network
